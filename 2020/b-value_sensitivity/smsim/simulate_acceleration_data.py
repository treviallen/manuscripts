from numpy import arange, array, random, where, reshape
from os import system, path
from misc_tools import listdir_extension
from obspy import Trace

def read_smc_file(acc_file):
    # reads the "smc" file (synthetic accelerogram generated by smsim)
    # outputs the displacement as obspy trace object in SI format (meters)

    f = open(acc_file, 'r')
    lines = f.readlines()[40:]
    f.close()
    
    acc = []
    for ln in lines:
        for i in range(0, int(len(ln)/10)):
            acc.append(float(ln[10*i:10*(i + 1)]))
        
    acc = array(acc)
    l = len(acc) * 8
    #acc = reshape(acc, (1, l))[0]

    acc_tr = Trace()
    acc_tr.data = acc / 100.
    acc_tr.stats.sampling_rate = 100.
    acc_tr.stats.delta = 0.01

    disp_trace = acc_tr.copy().integrate().integrate()
    return disp_trace

def get_wa_amp(displacement_trace):

    # claculate the displacement amplitude from Wood-Anderson seismometer

    paz_wa = {'sensitivity': 2080, 'zeros': [0j, 0j], 'gain': 1,
              'poles': [-6.2832 - 4.7124j, -6.2832 + 4.7124j]}
    disp_wa = displacement_trace.copy().simulate(paz_remove=None,
                                                 paz_simulate=paz_wa, water_level=10)

    ampl = max(abs(disp_wa.data))

    # estimate ML using Michael-Leiba and Malafant (1992) formula

    #local_mag = np.log10(ampl * 1000) + \
    #     1.34 * np.log10(hypo_dist / 100.) + 0.00055 * (hypo_dist - 100.) + 3.0

    # estimate ML using Bakun and Joyner (1984) formula

    # local_mag = np.log10(ampl * 1000) + \
    #             np.log10(hypo_dist) + 0.00301 * (hypo_dist) + 0.70

    return ampl * 1000.


# mag range to loop through
mags = arange(2., 5.55, 0.05)

# set mag-distance limits
maglims = [2.5, 3., 3.5, 4.0, 5., 6,]
distlims = [150, 200, 300, 400, 600, 600]
nstas = [5, 7, 9, 14, 19, 19]

# read base ctrl
lines = open('allen07_a_ts_drvr_base.ctl').readlines()
"""
# now loop through magnitudes
for m in mags:
    
    # first, calculate 1 site within 50 km
    d = random.rand(1) * 50.
    
    # now, write ctrl file
    lines[8] = '  simulations/m'+str('%0.2f' % m)+'r'+str('%0.1f' % d)+'_\n'
    lines[10] = '  '+str('%0.2f' % m)+' '+str('%0.f' % d) + '\n'
    
    # write ctrl file
    f = open('allen07_a_ts_drvr.ctl', 'w')
    f.writelines(lines)
    f.close()
    
    # now call smsim
    system('./a_ts_drvr_mod')
    
    # get other run params
    idx = where(maglims > m)[0][0] # always return first idx
    
    # get distances
    dists = random.rand(nstas[idx]) * distlims[idx]
    
    # loop through dists
    for d in dists:
    
        # now, write ctrl file
        lines[8] = '  simulations/m'+str('%0.2f' % m)+'r'+str('%0.1f' % d)+'_\n'
        lines[10] = '  '+str('%0.2f' % m)+' '+str('%0.f' % d) + '\n'
        
        # write ctrl file
        f = open('allen07_a_ts_drvr.ctl', 'w')
        f.writelines(lines)
        f.close()
        
        # now call smsim
        system('./a_ts_drvr_mod')
"""        
################################################################################
# get W-A amplitudes
################################################################################

smcfiles = listdir_extension('simulations', 'smc')

wa_amp = []
data = 'MAG,DIST,WA_AMP\n'
for smcfile in smcfiles:
    # get mag-dist from filename
    m = smcfile[1:5]
    r = smcfile.split('r')[-1].split('_')[0]
    
    disp_trace = read_smc_file(path.join('simulations',smcfile)) # in m
    wa_amp = get_wa_amp(disp_trace)
    
    data += ','.join((m, r, str(wa_amp))) + '\n'
    
f = open('simulated_wa_amplitudes.csv', 'w')
f.write(data)
f.close()
    